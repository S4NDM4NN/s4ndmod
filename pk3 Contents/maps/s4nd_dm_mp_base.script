//
//Brush Scripting
//Map: mp_base_cp
//Last edited by: Brandon
//

game_manager
{
	spawn
	{
		// Set scenario information

		wm_mapdescription			"Checkpoint: Secure the Base."

		// time until reinforcements in seconds

		wm_axis_respawntime		30
		wm_allied_respawntime		30

		wm_number_of_objectives		4

		// Set time until round ends in minutes

		wm_set_round_timelimit		15

		// Set objective #1 properties

		// Nazi's control objective #1 at the start
		wm_set_objective_status		1	-1
		wm_objective_axis_desc		1	"Capture the Northwest Tower."
		wm_objective_allied_desc	1	"Capture the Northwest Tower."

		wm_set_objective_status		2	-1
		wm_objective_axis_desc		2	"Capture the Warehouse."
		wm_objective_allied_desc	2	"Capture the Warehouse."

		wm_set_objective_status		3	-1
		wm_objective_axis_desc		3	"Capture Radar 02."
		wm_objective_allied_desc	3	"Capture Radar 02."

		wm_set_objective_status		4	-1
		wm_objective_axis_desc		4	"Capture the Radar 01 Access Bridge."
		wm_objective_allied_desc	4	"Capture the Radar 01 Access Bridge."
		wm_overview_image			"video/capturemaps.roq"

		wm_objective_image			1	"gfx/2d/mp_objectives/checkpoint_obj.tga"
		wm_objective_image			2	"gfx/2d/mp_objectives/checkpoint_obj.tga"
		wm_objective_image			3	"gfx/2d/mp_objectives/checkpoint_obj.tga"
		wm_objective_image			4	"gfx/2d/mp_objectives/checkpoint_obj.tga"

		// SHORT DESCRIPTIONS

		wm_objective_short_axis_desc	1	"Northwest Tower"
		wm_objective_short_axis_desc	2	"Warehouse"
		wm_objective_short_axis_desc	3	"Radar 02"
		wm_objective_short_axis_desc	4	"Access Bridge"

		wm_objective_short_allied_desc	1	"Northwest Tower"
		wm_objective_short_allied_desc	2	"Warehouse"
		wm_objective_short_allied_desc	3	"Radar 02"
		wm_objective_short_allied_desc	4	"Access Bridge"

		// If the round timer expires, nobody wins
		// Set the round winner:  0 == AXIS, 1 == ALLIED, -1 == Noone
		wm_setwinner -1

		// Accum 1-6 will be the state of the checkpoints, -1 means nobody controls the flag
		accum 1 set -1
		accum 2 set -1
		accum 3 set -1
		accum 4 set -1

		// Accum 7 tracks the tide of battle
		accum 7 set 0
	}

	// The following functions are called from the checkpoints when either team takes control of it

	trigger cp1_blue
	{
		// Change the objective state internally, so UI can update, etc.
		// Allied takes control of checkpoint #1
		wm_set_objective_status		1	1

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp1_blue

		// Change the variable within the script so that we can check if someone wins the round
		accum 1 set 1

		// Some kind of UI pop-up to alert players
		wm_announce	"Allies take the Northwest Lookout Tower!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_blue
	}

	trigger cp1_red
	{
		// Change the objective state internally, so UI can update, etc.
		// Axis takes control of checkpoint #1
		wm_set_objective_status		1	0

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp1_red

		// Change the variable within the script so that we can check if someone wins the round
		accum 1 set 0

		// Some kind of UI pop-up to alert players
		wm_announce	"Axis takes the Northwest Lookout Tower!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_red
	}

	trigger cp2_blue
	{
		// Change the objective state internally, so UI can update, etc.
		// Allied takes control of checkpoint #1
		wm_set_objective_status		2	1

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp2_blue

		// Change the variable within the script so that we can check if someone wins the round
		accum 2 set 1

		// Some kind of UI pop-up to alert players
		wm_announce	"Allies take the Warehouse!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_blue
	}

	trigger cp2_red
	{
		// Change the objective state internally, so UI can update, etc.
		// Axis takes control of checkpoint #2
		wm_set_objective_status		2	0

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp2_red

		// Change the variable within the script so that we can check if someone wins the round
		accum 2 set 0

		// Some kind of UI pop-up to alert players
		wm_announce	"Axis takes the Warehouse!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_red
	}

	trigger cp3_blue
	{
		// Change the objective state internally, so UI can update, etc.
		// Allied takes control of checkpoint #3
		wm_set_objective_status		3	1

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp3_blue

		// Change the variable within the script so that we can check if someone wins the round
		accum 3 set 1

		// Some kind of UI pop-up to alert players
		wm_announce	"Allies take Radar 02!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_blue
	}

	trigger cp3_red
	{
		// Change the objective state internally, so UI can update, etc.
		// Axis takes control of checkpoint #3
		wm_set_objective_status		3	0

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp3_red

		// Change the variable within the script so that we can check if someone wins the round
		accum 3 set 0

		// Some kind of UI pop-up to alert players
		wm_announce	"Axis takes Radar 02!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_red
	}

	trigger cp4_blue
	{
		// Change the objective state internally, so UI can update, etc.
		// Allied takes control of checkpoint #4
		wm_set_objective_status		4	1

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp4_blue

		// Change the variable within the script so that we can check if someone wins the round
		accum 4 set 1

		// Some kind of UI pop-up to alert players
		wm_announce	"Allies take Radar 01 Access Bridge!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_blue
	}

	trigger cp4_red
	{
		// Change the objective state internally, so UI can update, etc.
		// Axis takes control of checkpoint #4
		wm_set_objective_status		4	0

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp4_red

		// Change the variable within the script so that we can check if someone wins the round
		accum 4 set 0

		// Some kind of UI pop-up to alert players
		wm_announce	"Axis takes Radar 01 Access Bridge!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_red
	}

	// Check for game-winning condition

	trigger checkgame_blue
	{
		// Check all for checkpoints and see if they have been set to '1' - allied
		accum 1 abort_if_not_equal 1
		accum 2 abort_if_not_equal 1
		accum 3 abort_if_not_equal 1
		accum 4 abort_if_not_equal 1

		// Set the round winner:  0 == AXIS, 1 == ALLIED
		wm_setwinner 1

		// End the round
		wm_endround
	}

	trigger checkgame_red
	{
		// Check all for checkpoints and see if they have been set to '0' - axis
		accum 1 abort_if_not_equal 0
		accum 2 abort_if_not_equal 0
		accum 3 abort_if_not_equal 0
		accum 4 abort_if_not_equal 0

		// Set the round winner:  0 == AXIS, 1 == ALLIED
		wm_setwinner 0

		// End the round
		wm_endround
	}

	// Keep winner set to team with most flags

	trigger checkwinner
	{
		wm_setwinner -1
		accum 7 abort_if_equal 0
		wm_setwinner 1
		accum 7 abort_if_greater_than 0
		wm_setwinner 0
	}

	trigger adjustwinner_cp1_blue
	{
		accum 7 inc 1
		trigger game_manager checkwinner
		accum 1 abort_if_not_equal 0
		accum 7 inc 1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp1_red
	{
		accum 7 inc -1
		trigger game_manager checkwinner
		accum 1 abort_if_not_equal 1
		accum 7 inc -1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp2_blue
	{
		accum 7 inc 1
		trigger game_manager checkwinner
		accum 2 abort_if_not_equal 0
		accum 7 inc 1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp2_red
	{
		accum 7 inc -1
		trigger game_manager checkwinner
		accum 2 abort_if_not_equal 1
		accum 7 inc -1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp3_blue
	{
		accum 7 inc 1
		trigger game_manager checkwinner
		accum 3 abort_if_not_equal 0
		accum 7 inc 1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp3_red
	{
		accum 7 inc -1
		trigger game_manager checkwinner
		accum 3 abort_if_not_equal 1
		accum 7 inc -1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp4_blue
	{
		accum 7 inc 1
		trigger game_manager checkwinner
		accum 4 abort_if_not_equal 0
		accum 7 inc 1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp4_red
	{
		accum 7 inc -1
		trigger game_manager checkwinner
		accum 4 abort_if_not_equal 1
		accum 7 inc -1
		trigger game_manager checkwinner
	}

}

checkpoint01
{
	spawn
	{
		remove
	}
}

checkpoint02
{
	spawn
	{
		remove
	}
}

checkpoint03
{
	spawn
	{
		remove
	}
}

checkpoint04
{
	spawn
	{
		remove
	}
}

checkpoint1_base
{
	spawn
	{
		remove
	}
}

checkpoint2_base
{
	spawn
	{
		remove
	}
}

checkpoint3_base
{
	spawn
	{
		remove
	}
}

checkpoint4_base
{
	spawn
	{
		remove
	}
}
radar_obj1 //the north radar structure
{
	spawn
	{
		remove
	}
}

radar_obj2 //the south radar structure
{
	spawn
	{
		remove
	}
}

north_radar
{
	spawn
	{
		playsound sound/multiplayer/radar_loop02.wav looping
		trigger north_radar rotateloop
	}

	trigger rotateloop
	{
		faceangles 0 -90 0 3000
		faceangles 0 -180 0 3000
		faceangles 0 -270 0 3000
		faceangles 0 -360 0 3000
		trigger north_radar rotateloop
	}

	trigger destroyed
	{
		stopsound
		halt
	}

	death
	{
	}
}

south_radar
{
	spawn
	{
		playsound sound/multiplayer/radar_loop02.wav looping
		trigger south_radar rotateloop
	}

	trigger rotateloop
	{
		faceangles 0 -90 0 3000
		faceangles 0 -180 0 3000
		faceangles 0 -270 0 3000
		faceangles 0 -360 0 3000
		trigger south_radar rotateloop
	}

	trigger destroyed
	{
		stopsound
		halt
	}

	death
	{
	}
}

north_radar_remove
{
	spawn
	{
		remove
	}
}

south_radar_remove
{
	spawn
	{
		remove
	}
}

axis_two01
{
	spawn
	{
		remove
	}
}

allied_two01
{
	spawn
	{
		remove
	}
}

radar_pieces
{
	spawn
	{
		remove
	}
}

cp_clipremove01
{
	spawn
	{
		remove
	}
}
// LEVER STUFF

base_lever1
{
	spawn
	{
	}

	trigger down
	{
		gotomarker gate_lever1_downpos 16
		trigger base_gate1 open
	}

	trigger up
	{
		gotomarker gate_lever1_uppos 16
		trigger base_gate1 close
	}
}

base_lever2
{
	spawn
	{
	}

	trigger down
	{
		gotomarker gate_lever2_downpos 16
	}

	trigger up
	{
		gotomarker gate_lever2_uppos 16
	}
}

base_gate1_trigger1
{
	spawn
	{
			accum 5 set 1
	}

	trigger base_lever1up
	{
			accum 5 abort_if_not_equal 1
			trigger base_lever1 up
			trigger base_lever2 up
			accum 5 set 0
			wait 4000
			trigger base_gate1_trigger2 setaccum0
	}

	trigger setaccum0
	{
			accum 5 set 0
	}

	trigger setaccum1
	{
			accum 5 set 1
	}
}

base_gate1_trigger2
{
	spawn
	{
			accum 5 set 1
	}

	trigger base_lever1down
	{
			accum 5 abort_if_not_equal 0
			trigger base_lever1 down
			trigger base_lever2 down
			accum 5 set 1
			wait 4000
			trigger base_gate1_trigger1 setaccum1
	}

	trigger setaccum0
	{
			accum 5 set 0
	}

	trigger setaccum1
	{
			accum 5 set 1
	}
}

base_gate1
{
	spawn
	{
	}

	trigger open
	{
		wait 500
		playsound sound/scenaric/assault/big_gate1.wav
		wait 400
		playsound sound/scenaric/assault/big_gate2.wav looping forever
		gotomarker gate_pos1 32 wait
		stopsound
		playsound sound/scenaric/assault/big_gate3.wav
	}

	trigger close
	{
		wait 500
		playsound sound/scenaric/assault/big_gate1.wav
		wait 400
		playsound sound/scenaric/assault/big_gate2.wav looping forever
		gotomarker gate_pos2 32 wait
		stopsound
		playsound sound/scenaric/assault/big_gate3.wav
	}
}