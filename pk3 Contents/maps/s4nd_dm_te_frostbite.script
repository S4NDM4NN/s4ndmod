//created by agent
//frostbite dm
game_manager
{
	spawn
	{
		// Set scenario information
		wm_mapdescription		"Allied forces are attempting to steal supply documents from an Axis warehouse complex."

		// Set the respawn times

		wm_allied_respawntime		30
		wm_axis_respawntime		30

		wm_set_round_timelimit		10

		// Axis control all objectives at the start (0 == AXIS, 1 == ALLIED)
		wm_set_objective_status		1	0
		wm_set_objective_status		2	0
		wm_set_objective_status		3	0
		wm_set_objective_status		4	0
		wm_set_objective_status		5	0
		wm_set_objective_status		6	-1

		wm_objective_allied_desc	1	"Primary Objective:**Steal the Axis supply documents."
		wm_objective_allied_desc	2	"Primary Objective:**Get to the Transmitter and radio the Supply Documents."
		wm_objective_allied_desc	3	"Secondary Objective:**Breach the Service Door."
		wm_objective_allied_desc	4	"Secondary Objective:**Breach the Axis Storage Wall."
		wm_objective_allied_desc	5	"Secondary Objective:**Destroy the Main Door."
		wm_objective_allied_desc	6	"Secondary Objective:**Secure the Upper Complex."

		wm_objective_axis_desc		1	"Primary Objective:**Prevent Allies from stealing the supply documents."
		wm_objective_axis_desc		2	"Primary Objective:**Stop the Allies before they transmit the supply documents."
		wm_objective_axis_desc		3	"Primary Objective:**Prevent the Allies from destroying the Service Door."
		wm_objective_axis_desc		4	"Primary Objective:**Prevent the Allies from destroying the Storage Wall."
		wm_objective_axis_desc		5	"Primary Objective:**Do not let the Allies breach the complex."
		wm_objective_axis_desc		6	"Secondary Objective:**Hold the Upper Complex."

		wm_objective_image	1 		"gfx/2d/mp_objectives/te_frostbite_docs.jpg"
		wm_objective_image 	2 		"gfx/2d/mp_objectives/te_frostbite_transmitter.jpg"
		wm_objective_image 	3 		"gfx/2d/mp_objectives/te_frostbite_service_door.jpg"
		wm_objective_image 	4 		"gfx/2d/mp_objectives/te_frostbite_wall.jpg"
	  	wm_objective_image	5 		"gfx/2d/mp_objectives/te_frostbite_main_door.jpg"
		wm_objective_image 	6 		"gfx/2d/mp_objectives/te_frostbite_flag.jpg"
//		wm_overview_image			"gfx/2d/mp_objectives/te_frostbite_overview.jpg"
		wm_overview_image			"video/te_frostbite.roq"

		// SHORT DESCRIPTIONS

		wm_objective_short_axis_desc	1	"Defend the Supply Documents"
		wm_objective_short_axis_desc	2	"Stop the Allies from Transmitting"
		wm_objective_short_axis_desc	3	"Defend the Service Door"
		wm_objective_short_axis_desc	4	"Defend the Storage Wall"
		wm_objective_short_axis_desc	5	"Defend the Main Door"
		wm_objective_short_axis_desc	6	"Hold the Upper Complex"

		wm_objective_short_allied_desc	1	"Steal the Supply Documents"
		wm_objective_short_allied_desc	2	"Transmit the Supply Documents"
		wm_objective_short_allied_desc	3	"Destroy the Service Door"
		wm_objective_short_allied_desc	4	"Destroy the Storage Wall"
		wm_objective_short_allied_desc	5	"Destroy the Main Door"
		wm_objective_short_allied_desc	6	"Capture the Upper Complex"

		// Set the number of objectives for the map
		wm_number_of_objectives		6

		// Set Defending Team for SW Mode
		wm_set_defending_team	0

		// If the round timer expires, the Axis have won, so set the current winning team
		// Set the round winner:  0 == AXIS, 1 == ALLIED
		wm_setwinner 0

	}

	trigger axis_object_stolen
	{
		// Change the objective state internally, so UI can update, etc.
		// Allied have stolen the documents (0 == AXIS, 1 == ALLIED)
		wm_set_objective_status		1	1
	}

	trigger axis_object_returned
	{
		// Change the objective state internally, so UI can update, etc.
		// Axis have returned the documents (0 == AXIS, 1 == ALLIED)
		wm_set_objective_status		1	0
	}

	trigger allies_transmit
	{
		wm_set_objective_status		2	1
		accum 1 set 1
		wm_announce	"Allies transmitted the documents!"

		// Call function to check if the round has been won
		trigger game_manager checkgame
	}

	trigger service_door_objective
	{
		wm_set_objective_status		3	1
		wm_announce	"The Service Door has been breached!"
	}

	trigger wall_objective
	{
		wm_set_objective_status		4	1
		wm_announce	"The Storage Wall has been breached!"
	}

	trigger main_door_objective
	{
		wm_set_objective_status		5	1
		wm_announce	"The Main Door has been breached!"
	}

	trigger flagblue
	{
		wm_set_objective_status		6	1
		wm_announce	"Allies capture the Upper Complex!"
	}

	trigger flagred
	{
		wm_set_objective_status		6	-1
		wm_announce	"Axis reclaims the Upper Complex!"
	}

	trigger checkgame
	{
		accum 1 abort_if_not_equal 1

		// Set the round winner:  0 == AXIS, 1 == ALLIED
		wm_setwinner 1

		// End the round
		wm_endround
	}
}



/////////////////////////////////////////////////
// Objectives
/////////////////////////////////////////////////

transmitter
{
	spawn
	{
	}

	death
	{
		trigger game_manager allies_transmit
	}
}


main_door
{
	spawn
	{
		remove
	}

	death
	{
		trigger game_manager main_door_objective
	}
}

wall
{
	spawn
	{
		wait 100
		alertentity wall_rubble
		remove
	}

	death
	{
		trigger game_manager wall_objective
		alertentity wall_rubble
	}
}

service_door
{
	spawn
	{
		remove
	}

	death
	{
		trigger game_manager service_door_objective
	}
}

// the flag control point, when captured by allies they spawn next to it.
forward_respawn
{
	spawn
	{
		wm_set_objective_status		6	-1
	}

	trigger axis_capture
	{
		trigger game_manager flagred
	}

	trigger allied_capture
	{
		trigger game_manager flagblue
	}
}

/////////////////////////////////////////////////
// Misc stuff
/////////////////////////////////////////////////

// usable gramophone
gramophone
{
	trigger play
	{
		//playanim <startframe> <endframe> [looping forever/duration] [rate FPS]
		playanim	0	78	 looping 42900 //3.9 seconds for a loop (78frames 20fps)
	}
}

gramophone_trigger
{
	trigger play
	{
		trigger gramophone play
	}
}


// Hitler radio in the office
radio_clip
{
	death
	{
		trigger radio_model die
	}
}
radio_model
{
	trigger die
	{
		remove
	}
}