//
//Brush Scripting
//Map: DEATHMATCH mp_village
//created by agent
//Last edited by: Agent
//

game_manager
{
	spawn
	{
		// Set scenario information

		wm_mapdescription			"Checkpoint: Secure the Village."

		// time until reinforcements in seconds

		wm_axis_respawntime		30
		wm_allied_respawntime		30

		wm_number_of_objectives		5

		// Set time until round ends in minutes

		wm_set_round_timelimit		15

		// Set objective #1 properties

		// Nazi's control objective #1 at the start
		wm_set_objective_status		1	-1
		wm_objective_axis_desc		1	"Capture the Southeast City Exit."
		wm_objective_allied_desc	1	"Capture the Southeast City Exit."

		wm_set_objective_status		2	-1
		wm_objective_axis_desc		2	"Capture the Southwest Courtyard."
		wm_objective_allied_desc	2	"Capture the Southwest Courtyard."

		wm_set_objective_status		3	-1
		wm_objective_axis_desc		3	"Capture the Central Courtyard."
		wm_objective_allied_desc	3	"Capture the Central Courtyard."

		wm_set_objective_status		4	-1
		wm_objective_axis_desc		4	"Capture the Northeast Cemetary."
		wm_objective_allied_desc	4	"Capture the Northeast Cemetary."

		wm_set_objective_status		5	-1
		wm_objective_axis_desc		5	"Capture the Northwest Courtyard."
		wm_objective_allied_desc	5	"Capture the Northwest Courtyard."
		wm_overview_image			"video/capturemaps.roq"

		wm_objective_image			1	"gfx/2d/mp_objectives/checkpoint_obj.tga"
		wm_objective_image			2	"gfx/2d/mp_objectives/checkpoint_obj.tga"
		wm_objective_image			3	"gfx/2d/mp_objectives/checkpoint_obj.tga"
		wm_objective_image			4	"gfx/2d/mp_objectives/checkpoint_obj.tga"
		wm_objective_image			5	"gfx/2d/mp_objectives/checkpoint_obj.tga"

		// SHORT DESCRIPTIONS

		wm_objective_short_axis_desc	1	"Southeast City Exit"
		wm_objective_short_axis_desc	2	"Southwest Courtyard"
		wm_objective_short_axis_desc	3	"Central Courtyard"
		wm_objective_short_axis_desc	4	"Northeast Cemetary"
		wm_objective_short_axis_desc	5	"Northwest Courtyard"

		wm_objective_short_allied_desc	1	"Southeast City Exit"
		wm_objective_short_allied_desc	2	"Southwest Courtyard"
		wm_objective_short_allied_desc	3	"Central Courtyard"
		wm_objective_short_allied_desc	4	"Northeast Cemetary"
		wm_objective_short_allied_desc	5	"Northwest Courtyard"

		// If the round timer expires, nobody wins
		// Set the round winner:  0 == AXIS, 1 == ALLIED, -1 == Noone
		wm_setwinner -1

		// Accum 1-6 will be the state of the checkpoints, -1 means nobody controls the flag
		accum 1 set -1
		accum 2 set -1
		accum 3 set -1
		accum 4 set -1
		accum 5 set -1

		// Accum 7 tracks the tide of battle
		accum 7 set 0
	}

	// The following functions are called from the checkpoints when either team takes control of it

	trigger cp1_blue
	{
		// Change the objective state internally, so UI can update, etc.
		// Allied takes control of checkpoint #1
		wm_set_objective_status		1	1

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp1_blue

		// Change the variable within the script so that we can check if someone wins the round
		accum 1 set 1

		// Some kind of UI pop-up to alert players
		wm_announce	"Allies take the Southeast City Exit!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_blue
	}

	trigger cp1_red
	{
		// Change the objective state internally, so UI can update, etc.
		// Axis takes control of checkpoint #1
		wm_set_objective_status		1	0

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp1_red

		// Change the variable within the script so that we can check if someone wins the round
		accum 1 set 0

		// Some kind of UI pop-up to alert players
		wm_announce	"Axis takes the Southeast City Exit!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_red
	}

	trigger cp2_blue
	{
		// Change the objective state internally, so UI can update, etc.
		// Allied takes control of checkpoint #1
		wm_set_objective_status		2	1

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp2_blue

		// Change the variable within the script so that we can check if someone wins the round
		accum 2 set 1

		// Some kind of UI pop-up to alert players
		wm_announce	"Allies take the Southwest Courtyard!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_blue
	}

	trigger cp2_red
	{
		// Change the objective state internally, so UI can update, etc.
		// Axis takes control of checkpoint #2
		wm_set_objective_status		2	0

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp2_red

		// Change the variable within the script so that we can check if someone wins the round
		accum 2 set 0

		// Some kind of UI pop-up to alert players
		wm_announce	"Axis takes the Southwest Courtyard!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_red
	}

	trigger cp3_blue
	{
		// Change the objective state internally, so UI can update, etc.
		// Allied takes control of checkpoint #3
		wm_set_objective_status		3	1

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp3_blue

		// Change the variable within the script so that we can check if someone wins the round
		accum 3 set 1

		// Some kind of UI pop-up to alert players
		wm_announce	"Allies take the Central Courtyard!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_blue
	}

	trigger cp3_red
	{
		// Change the objective state internally, so UI can update, etc.
		// Axis takes control of checkpoint #3
		wm_set_objective_status		3	0

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp3_red

		// Change the variable within the script so that we can check if someone wins the round
		accum 3 set 0

		// Some kind of UI pop-up to alert players
		wm_announce	"Axis takes the Central Courtyard!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_red
	}

	trigger cp4_blue
	{
		// Change the objective state internally, so UI can update, etc.
		// Allied takes control of checkpoint #4
		wm_set_objective_status		4	1

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp4_blue

		// Change the variable within the script so that we can check if someone wins the round
		accum 4 set 1

		// Some kind of UI pop-up to alert players
		wm_announce	"Allies take the Northeast Cemetary!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_blue
	}

	trigger cp4_red
	{
		// Change the objective state internally, so UI can update, etc.
		// Axis takes control of checkpoint #4
		wm_set_objective_status		4	0

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp4_red

		// Change the variable within the script so that we can check if someone wins the round
		accum 4 set 0

		// Some kind of UI pop-up to alert players
		wm_announce	"Axis takes the Northeast Cemetary!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_red
	}

	trigger cp5_blue
	{
		// Change the objective state internally, so UI can update, etc.
		// Allied takes control of checkpoint #4
		wm_set_objective_status		5	1

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp5_blue

		// Change the variable within the script so that we can check if someone wins the round
		accum 5 set 1

		// Some kind of UI pop-up to alert players
		wm_announce	"Allies take the Northwest Courtyard!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_blue
	}

	trigger cp5_red
	{
		// Change the objective state internally, so UI can update, etc.
		// Axis takes control of checkpoint #4
		wm_set_objective_status		5	0

		// First update winner based on number of flags held by both teams
		trigger game_manager adjustwinner_cp5_red

		// Change the variable within the script so that we can check if someone wins the round
		accum 5 set 0

		// Some kind of UI pop-up to alert players
		wm_announce	"Axis takes the Northwest Courtyard!"

		// Call function to check if the round has been won
		trigger game_manager checkgame_red
	}

	// Keep winner set to team with most flags

	trigger checkwinner
	{
		wm_setwinner -1
		accum 7 abort_if_equal 0
		wm_setwinner 1
		accum 7 abort_if_greater_than 0
		wm_setwinner 0
	}

	trigger adjustwinner_cp1_blue
	{
		accum 7 inc 1
		trigger game_manager checkwinner
		accum 1 abort_if_not_equal 0
		accum 7 inc 1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp1_red
	{
		accum 7 inc -1
		trigger game_manager checkwinner
		accum 1 abort_if_not_equal 1
		accum 7 inc -1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp2_blue
	{
		accum 7 inc 1
		trigger game_manager checkwinner
		accum 2 abort_if_not_equal 0
		accum 7 inc 1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp2_red
	{
		accum 7 inc -1
		trigger game_manager checkwinner
		accum 2 abort_if_not_equal 1
		accum 7 inc -1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp3_blue
	{
		accum 7 inc 1
		trigger game_manager checkwinner
		accum 3 abort_if_not_equal 0
		accum 7 inc 1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp3_red
	{
		accum 7 inc -1
		trigger game_manager checkwinner
		accum 3 abort_if_not_equal 1
		accum 7 inc -1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp4_blue
	{
		accum 7 inc 1
		trigger game_manager checkwinner
		accum 4 abort_if_not_equal 0
		accum 7 inc 1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp4_red
	{
		accum 7 inc -1
		trigger game_manager checkwinner
		accum 4 abort_if_not_equal 1
		accum 7 inc -1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp5_blue
	{
		accum 7 inc 1
		trigger game_manager checkwinner
		accum 5 abort_if_not_equal 0
		accum 7 inc 1
		trigger game_manager checkwinner
	}

	trigger adjustwinner_cp5_red
	{
		accum 7 inc -1
		trigger game_manager checkwinner
		accum 5 abort_if_not_equal 1
		accum 7 inc -1
		trigger game_manager checkwinner
	}

	trigger checkgame_blue
	{
		// Check all for checkpoints and see if they have been set to '1' - allied
		accum 1 abort_if_not_equal 1
		accum 2 abort_if_not_equal 1
		accum 3 abort_if_not_equal 1
		accum 4 abort_if_not_equal 1
		accum 5 abort_if_not_equal 1

		// Set the round winner:  0 == AXIS, 1 == ALLIED
		wm_setwinner 1

		// End the round
		wm_endround
	}

	trigger checkgame_red
	{
		// Check all for checkpoints and see if they have been set to '0' - axis
		accum 1 abort_if_not_equal 0
		accum 2 abort_if_not_equal 0
		accum 3 abort_if_not_equal 0
		accum 4 abort_if_not_equal 0
		accum 5 abort_if_not_equal 0

		// Set the round winner:  0 == AXIS, 1 == ALLIED
		wm_setwinner 0

		// End the round
		wm_endround
	}
}
// GARBAGE to REMOVE

respawn_flagbase //Warehouse Doors used to be axis_obj2
{
	spawn
	{
		remove
	}
}

allied_flag01
{
	spawn
	{
		remove
	}
}

allied_obj01
{
	spawn
	{
		remove
	}
}

allied_obj02
{
	spawn
	{
		remove
	}
}

crypt_wall01
{
	spawn
	{
		//remove
	}
}

crypt_wall02
{
	spawn
	{
		//remove
	}
}

obj_trigger01
{
	spawn
	{
		remove
	}
}

obj_item01
{
	spawn
	{
		remove
	}
}

obj_block01
{
	spawn
	{
		remove
	}
}

obj_block02
{
	spawn
	{
		remove
	}
}

obj_block03
{
	spawn
	{
		remove
	}
}

cp_spawn
{
	spawn
	{
		remove
	}
}

truck_two01
{
	spawn
	{
		remove
	}
}

crypt_two01
{
	spawn
	{
		remove
	}
}

obj_hurt_trig01
{
	spawn
	{
		remove
	}
}

obj_hurt_trig02
{
	spawn
	{
		remove
	}
}

obj_hurt_trig03
{
	spawn
	{
		remove
	}
}
checkpoint01
{
	spawn
	{
		remove
	}
}

checkpoint02
{
	spawn
	{
		remove
	}
}

checkpoint03
{
	spawn
	{
		remove
	}
}

checkpoint04
{
	spawn
	{
		remove
	}
}

checkpoint05
{
	spawn
	{
		remove
	}
}

checkpoint01_base
{
	spawn
	{
		remove
	}
}

checkpoint02_base
{
	spawn
	{
		remove
	}
}

checkpoint03_base
{
	spawn
	{
		remove
	}
}

checkpoint04_base
{
	spawn
	{
		remove
	}
}

checkpoint05_base
{
	spawn
	{
		remove
	}
}
cp_fakewall01
{
	spawn
	{
		remove
	}
}